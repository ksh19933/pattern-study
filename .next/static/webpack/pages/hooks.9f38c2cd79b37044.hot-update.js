"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/hooks",{

/***/ "./src/pages/hooks/index.tsx":
/*!***********************************!*\
  !*** ./src/pages/hooks/index.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n // Hooks가 추가되기 전에 React에서 상태와 생명 주기 함수를 사용하려면 클래스 컴포넌트를 사용해야 했다.\n // class MyComponent extends React.Component {\n //     /* Adding state and binding custom methods */\n //     constructor() {\n //         super()\n //         this.state = { ... }\n //         this.customMethodOne = this.customMethodOne.bind(this)\n //         this.customMethodTwo = this.customMethodTwo.bind(this)\n //     }\n //\n //     /* Lifecycle Methods */\n //     componentDidMount() { ...}\n //     componentWillUnmount() { ... }\n //\n //     /* Custom methods */\n //     customMethodOne() { ... }\n //     customMethodTwo() { ... }\n //\n //     render() { return { ... }}\n // }\n // export default class Button extends React.Component<any, any> {\n //   constructor() {\n //     super();\n //     this.state = { enabled: false };\n //   }\n //\n //   render() {\n //     const { enabled } = this.state;\n //     const btnText = enabled ? \"enabled\" : \"disabled\";\n //\n //     return (\n //       <div\n //         className={`btn enabled-${enabled}`}\n //         onClick={() => this.setState({ enabled: !enabled })}\n //       >\n //         {btnText}\n //       </div>\n //     );\n //   }\n // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaG9va3MvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7OztBQUFtRCxDQUVuRCxnRUFBZ0U7Q0FDaEUsOENBQThDO0NBQzlDLG9EQUFvRDtDQUNwRCxzQkFBc0I7Q0FDdEIsa0JBQWtCO0NBQ2xCLCtCQUErQjtDQUMvQixpRUFBaUU7Q0FDakUsaUVBQWlFO0NBQ2pFLFFBQVE7Q0FDUixFQUFFO0NBQ0YsOEJBQThCO0NBQzlCLGlDQUFpQztDQUNqQyxxQ0FBcUM7Q0FDckMsRUFBRTtDQUNGLDJCQUEyQjtDQUMzQixnQ0FBZ0M7Q0FDaEMsZ0NBQWdDO0NBQ2hDLEVBQUU7Q0FDRixpQ0FBaUM7Q0FDakMsSUFBSTtDQUVKLGtFQUFrRTtDQUNsRSxvQkFBb0I7Q0FDcEIsZUFBZTtDQUNmLHVDQUF1QztDQUN2QyxNQUFNO0NBQ04sRUFBRTtDQUNGLGVBQWU7Q0FDZixzQ0FBc0M7Q0FDdEMsd0RBQXdEO0NBQ3hELEVBQUU7Q0FDRixlQUFlO0NBQ2YsYUFBYTtDQUNiLCtDQUErQztDQUMvQywrREFBK0Q7Q0FDL0QsVUFBVTtDQUNWLG9CQUFvQjtDQUNwQixlQUFlO0NBQ2YsU0FBUztDQUNULE1BQU07Q0FDTixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wYWdlcy9ob29rcy9pbmRleC50c3g/NGI5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBIb29rc+qwgCDstpTqsIDrkJjquLAg7KCE7JeQIFJlYWN07JeQ7IScIOyDge2DnOyZgCDsg53rqoUg7KO86riwIO2VqOyImOulvCDsgqzsmqntlZjroKTrqbQg7YG0656Y7IqkIOy7tO2PrOuEjO2KuOulvCDsgqzsmqntlbTslbwg7ZaI64ukLlxuLy8gY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuLy8gICAgIC8qIEFkZGluZyBzdGF0ZSBhbmQgYmluZGluZyBjdXN0b20gbWV0aG9kcyAqL1xuLy8gICAgIGNvbnN0cnVjdG9yKCkge1xuLy8gICAgICAgICBzdXBlcigpXG4vLyAgICAgICAgIHRoaXMuc3RhdGUgPSB7IC4uLiB9XG4vLyAgICAgICAgIHRoaXMuY3VzdG9tTWV0aG9kT25lID0gdGhpcy5jdXN0b21NZXRob2RPbmUuYmluZCh0aGlzKVxuLy8gICAgICAgICB0aGlzLmN1c3RvbU1ldGhvZFR3byA9IHRoaXMuY3VzdG9tTWV0aG9kVHdvLmJpbmQodGhpcylcbi8vICAgICB9XG4vL1xuLy8gICAgIC8qIExpZmVjeWNsZSBNZXRob2RzICovXG4vLyAgICAgY29tcG9uZW50RGlkTW91bnQoKSB7IC4uLn1cbi8vICAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHsgLi4uIH1cbi8vXG4vLyAgICAgLyogQ3VzdG9tIG1ldGhvZHMgKi9cbi8vICAgICBjdXN0b21NZXRob2RPbmUoKSB7IC4uLiB9XG4vLyAgICAgY3VzdG9tTWV0aG9kVHdvKCkgeyAuLi4gfVxuLy9cbi8vICAgICByZW5kZXIoKSB7IHJldHVybiB7IC4uLiB9fVxuLy8gfVxuXG4vLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8YW55LCBhbnk+IHtcbi8vICAgY29uc3RydWN0b3IoKSB7XG4vLyAgICAgc3VwZXIoKTtcbi8vICAgICB0aGlzLnN0YXRlID0geyBlbmFibGVkOiBmYWxzZSB9O1xuLy8gICB9XG4vL1xuLy8gICByZW5kZXIoKSB7XG4vLyAgICAgY29uc3QgeyBlbmFibGVkIH0gPSB0aGlzLnN0YXRlO1xuLy8gICAgIGNvbnN0IGJ0blRleHQgPSBlbmFibGVkID8gXCJlbmFibGVkXCIgOiBcImRpc2FibGVkXCI7XG4vL1xuLy8gICAgIHJldHVybiAoXG4vLyAgICAgICA8ZGl2XG4vLyAgICAgICAgIGNsYXNzTmFtZT17YGJ0biBlbmFibGVkLSR7ZW5hYmxlZH1gfVxuLy8gICAgICAgICBvbkNsaWNrPXsoKSA9PiB0aGlzLnNldFN0YXRlKHsgZW5hYmxlZDogIWVuYWJsZWQgfSl9XG4vLyAgICAgICA+XG4vLyAgICAgICAgIHtidG5UZXh0fVxuLy8gICAgICAgPC9kaXY+XG4vLyAgICAgKTtcbi8vICAgfVxuLy8gfVxuIl0sIm5hbWVzIjpbIlJlYWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/hooks/index.tsx\n"));

/***/ })

});